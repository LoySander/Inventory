@page "/inventory"
@rendermode InteractiveServer
@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase
@inject NavigationManager NavigationManager
@using MyInventory.Components.Controls 
<h3>InventoryList</h3>
<br/>
<ViewInventory OnSearchInventories="OnSearchInventories"
    DisplayOnSearchResult="true"></ViewInventory>
@if (inventories != null && inventories.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var inv in this.inventories){
                
                 <InventoryItem2Component inventory ="inv"></InventoryItem2Component>   
            }
        </tbody>
    </table>
}
<br/>
<button type="button" class="btn-primary" @onclick="AddInventory">Add</button>
@code {
    private List<Inventory.CoreBusiness.Inventory> inventories;

    protected override async Task OnInitializedAsync()
    {

        var invs = await ViewInventoriesByNameUseCase.ExecuteAsync();
        this.inventories = invs.ToList();

    }
    private void OnSearchInventories(List<Inventory.CoreBusiness.Inventory> inventories)
    {
        this.inventories = inventories;
    }
    private void AddInventory(){
        NavigationManager.NavigateTo("/addinventory");
    }

    // private void EditInventory(int Id)
    // {
    //     NavigationManager.NavigateTo($"/editinventory/{Id}");
    // }
    // private void EditInventory()
    // {
    //     NavigationManager.NavigateTo($"/editinventory/{Id}");
    // }
}

